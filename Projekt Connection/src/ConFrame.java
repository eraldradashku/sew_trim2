
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author erarad14
 */
public class ConFrame extends javax.swing.JFrame {
    Connection con = null;
    Statement stmt=null;
    DatabaseMetaData md;
    /**
     * Creates new form ConFrame
     */
 
    public ConFrame() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_con = new javax.swing.JButton();
        btn_discon = new javax.swing.JButton();
        l_host = new javax.swing.JLabel();
        tf_host = new javax.swing.JTextField();
        l_port = new javax.swing.JLabel();
        tf_port = new javax.swing.JTextField();
        tf_psw = new javax.swing.JTextField();
        tf_username = new javax.swing.JTextField();
        l_password = new javax.swing.JLabel();
        l_username = new javax.swing.JLabel();
        tf_db = new javax.swing.JTextField();
        l_db = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_database = new javax.swing.JTable();
        jcb_tables = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_con.setText("Connect");
        btn_con.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_conActionPerformed(evt);
            }
        });

        btn_discon.setText("Disconnect");
        btn_discon.setEnabled(false);
        btn_discon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_disconActionPerformed(evt);
            }
        });

        l_host.setText("Host");

        tf_host.setText("localhost");
        tf_host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_hostActionPerformed(evt);
            }
        });

        l_port.setText("Port");

        tf_port.setText("3306");
        tf_port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_portActionPerformed(evt);
            }
        });

        tf_psw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_pswActionPerformed(evt);
            }
        });

        tf_username.setText("root");
        tf_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_usernameActionPerformed(evt);
            }
        });

        l_password.setText("Password");

        l_username.setText("Username");

        tf_db.setText("world");
        tf_db.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_dbActionPerformed(evt);
            }
        });

        l_db.setText("Database");

        tb_database.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tb_database);

        jcb_tables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_tablesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l_db)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_db, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(l_host)
                                        .addGap(10, 10, 10)
                                        .addComponent(tf_host, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(l_port)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tf_port)))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(l_username)
                                        .addGap(10, 10, 10)
                                        .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(l_password)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcb_tables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tf_psw, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_discon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_con, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_username)
                            .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_password)
                            .addComponent(tf_psw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_host)
                            .addComponent(tf_host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_port)
                            .addComponent(tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_db)
                            .addComponent(tf_db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcb_tables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_con)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_discon)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(219, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_conActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_conActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
           
            System.out.println("Could not load mysql driver");
        }
        
        try {
            con=DriverManager.getConnection("jdbc:mysql://"+tf_host.getText()+":"+tf_port.getText()+"/"+tf_db.getText()+"", ""+tf_username.getText()+"", ""+tf_psw.getText()+"");
            btn_discon.setEnabled(true);
            btn_con.setEnabled(false);
        } catch (SQLException ex) {
            System.out.println("Could not create connection");
        }
        
        try{
           
           md = con.getMetaData();

            ResultSet rs = md.getTables(null, null, null, null);
            while (rs.next()) {
                jcb_tables.addItem(rs.getString(3));
                //System.out.println(rs.getString(3));
            }
        }
        catch (SQLException ex){
            System.out.println("Could not create statement.");
        }
        int num_columns=0;
        String columnName=null;
        try{
            
            ResultSet result = md.getColumns(
            null, null, jcb_tables.getSelectedItem().toString(), null);

            //tblEntries.removeAll();
            DefaultTableModel tableModel = new DefaultTableModel();
            
            while (result.next()) {
                columnName = result.getString(4);

                tableModel.addColumn(columnName);
                num_columns++;
                //               int columnType = result.getInt(5);
            }
            tb_database.setModel(tableModel);
        }
        catch(SQLException ex){
            System.out.println("Could not get table columns.");
        }
        
        try{
            String sql="SELECT * FROM city";
            stmt=con.prepareStatement(sql);
            ResultSet rs_table=stmt.executeQuery(sql);
            while(rs_table.next()){
            Object[] row= new Object[num_columns];
                for(int i=0; i<num_columns; i++){
                    row[i]=rs_table.getString(columnName);
                    ((DefaultTableModel) tb_database.getModel()).insertRow(rs_table.getRow() - 1, row);
                }
            }
        }
        catch(SQLException ex){
            System.out.println("Could not get rows.");
        }
    }//GEN-LAST:event_btn_conActionPerformed
 
    private void tf_hostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_hostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_hostActionPerformed

    private void tf_portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_portActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_portActionPerformed

    private void tf_pswActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_pswActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_pswActionPerformed

    private void tf_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_usernameActionPerformed

    private void tf_dbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_dbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_dbActionPerformed

    private void btn_disconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_disconActionPerformed
         try{
            stmt.close();
        con.close();
        btn_discon.setEnabled(false);
        btn_con.setEnabled(true);
        }
        catch (SQLException ex){
            System.out.println("Could not close Statement/Connection");
        } catch (NullPointerException ex){
            System.out.println("Connection konnte nicht geschlossen werden, weil es nicht existiert.");
        }
    }//GEN-LAST:event_btn_disconActionPerformed

    private void jcb_tablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_tablesActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jcb_tablesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new ConFrame().setVisible(true);
             
            }
        });
        }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_con;
    private javax.swing.JButton btn_discon;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcb_tables;
    private javax.swing.JLabel l_db;
    private javax.swing.JLabel l_host;
    private javax.swing.JLabel l_password;
    private javax.swing.JLabel l_port;
    private javax.swing.JLabel l_username;
    private javax.swing.JTable tb_database;
    private javax.swing.JTextField tf_db;
    private javax.swing.JTextField tf_host;
    private javax.swing.JTextField tf_port;
    private javax.swing.JTextField tf_psw;
    private javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables

}

